// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/dashboard/advertencias" | "/dashboard/alunos" | "/dashboard/configuracoes" | "/dashboard/direcao/advertencias" | "/dashboard/equipamentos" | "/dashboard/professor/advertencias" | "/dashboard/relatorios" | "/dashboard/selecao" | "/dashboard/turmas" | "/login"
type AppRouteHandlerRoutes = "/api/adv/gravity" | "/api/advertencias" | "/api/advertencias/[id]" | "/api/equipamentos" | "/api/equipamentos/[id]" | "/api/equipamentos/totais" | "/api/groq" | "/api/turmas" | "/api/usuarios" | "/api/usuarios/config"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard" | "/dashboard/direcao" | "/dashboard/professor"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/adv/gravity": {}
  "/api/advertencias": {}
  "/api/advertencias/[id]": { "id": string; }
  "/api/equipamentos": {}
  "/api/equipamentos/[id]": { "id": string; }
  "/api/equipamentos/totais": {}
  "/api/groq": {}
  "/api/turmas": {}
  "/api/usuarios": {}
  "/api/usuarios/config": {}
  "/dashboard": {}
  "/dashboard/advertencias": {}
  "/dashboard/alunos": {}
  "/dashboard/configuracoes": {}
  "/dashboard/direcao": {}
  "/dashboard/direcao/advertencias": {}
  "/dashboard/equipamentos": {}
  "/dashboard/professor": {}
  "/dashboard/professor/advertencias": {}
  "/dashboard/relatorios": {}
  "/dashboard/selecao": {}
  "/dashboard/turmas": {}
  "/login": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
  "/dashboard/direcao": never
  "/dashboard/professor": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
